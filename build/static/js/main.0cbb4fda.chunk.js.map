{"version":3,"sources":["components/Card.module.css","components/UI/Section.module.css","components/Tasks/TaskItem.module.css","components/Tasks/Tasks.module.css","components/NewTask/TaskForm.module.css","hooks/use-counter.js","components/Card.js","components/BackwardCounter.js","components/ForwardCounter.js","components/UI/Section.js","components/Tasks/TaskItem.js","components/Tasks/Tasks.js","components/NewTask/TaskForm.js","hooks/use-http.js","components/NewTask/NewTask.js","App.js","index.js"],"names":["module","exports","useCounter","forward","useState","counter","setCounter","useEffect","interval","setInterval","prevCounter","clearInterval","Card","props","className","classes","card","children","BackwardCounter","ForwardCounter","Section","section","TaskItem","task","Tasks","taskList","items","length","map","text","id","content","error","onClick","onFetch","loading","container","TaskForm","taskInputRef","useRef","form","onSubmit","event","preventDefault","enteredValue","current","value","trim","onEnterTask","type","ref","useHttp","isLoading","setIsLoading","setError","sendRequest","useCallback","requestConfig","applyData","fetch","url","method","headers","body","JSON","stringify","response","ok","Error","json","data","message","NewTask","sendTaskRequest","createTask","taskText","taskData","createdTask","name","onAddTask","enterTaskHandler","bind","App","tasks","setTasks","fetchTasks","tasksObj","loadedTasks","taskKey","push","Fragment","prevTasks","concat","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.0cbb4fda.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3F8np\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3QN43\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"TaskItem_task__1rhm-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Tasks_container__2nBq5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"TaskForm_form__31W-N\"};","import { useState, useEffect } from 'react';\n\n// NOTE: the name of function start with 'use' it's a convention and the name of file start with 'use-'\nconst useCounter = (forward = true) => {\n    // default value of forward is set to true to configure our custom hook \n  const [counter, setCounter] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n        if(forward){\n            setCounter((prevCounter) => prevCounter + 1);\n        }else{\n            setCounter((prevCounter) => prevCounter - 1);\n        }\n      \n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return counter;\n};\n\nexport default useCounter;","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useState, useEffect } from 'react';\nimport useCounter from '../hooks/use-counter';\n\nimport Card from './Card';\n\nconst BackwardCounter = () => {\n  // const [counter, setCounter] = useState(0);\n\n  // useEffect(() => {\n  //   const interval = setInterval(() => {\n  //     setCounter((prevCounter) => prevCounter - 1);\n  //   }, 1000);\n\n  //   return () => clearInterval(interval);\n  // }, []);\n  const counter = useCounter(false);\n\n  return <Card>{counter}</Card>;\n};\n\nexport default BackwardCounter;\n","import { useState, useEffect } from 'react';\nimport Card from './Card';\nimport useCounter from '../hooks/use-counter';\n\nconst ForwardCounter = () => {\n  // const [counter, setCounter] = useState(0);\n\n  // useEffect(() => {\n  //   const interval = setInterval(() => {\n  //     setCounter((prevCounter) => prevCounter + 1);\n  //   }, 1000);\n\n  //   return () => clearInterval(interval);\n  // }, []);\n  const counter = useCounter(true);\n\n  return <Card>{counter}</Card>;\n};\n\nexport default ForwardCounter;\n","import classes from './Section.module.css';\n\nconst Section = (props) => {\n  return <section className={classes.section}>{props.children}</section>;\n};\n\nexport default Section;\n","\nimport classes from './TaskItem.module.css';     \nconst TaskItem = (props) => {\n  return <li className={classes.task}>{props.children}</li>\n};\n\nexport default TaskItem;","import Section from '../UI/Section';\nimport TaskItem from './TaskItem';\nimport classes from './Tasks.module.css'\n\nconst Tasks = (props) => {\n  let taskList = <h2>No tasks found. Start adding some!</h2>;\n\n  if (props.items.length > 0) {\n    taskList = (\n      <ul>\n        {props.items.map((task) => (\n          <TaskItem key={task.id}>{task.text}</TaskItem>\n        ))}\n      </ul>\n    );\n  }\n\n  let content = taskList;\n\n  if (props.error) {\n    content = <button onClick={props.onFetch}>Try again</button>;\n  }\n\n  if (props.loading) {\n    content = 'Loading tasks...';\n  }\n\n  return (\n    <Section>\n      <div className={classes.container}>{content}</div>\n    </Section>\n  );\n};\n\nexport default Tasks;\n","import { useRef } from 'react';\n\nimport classes from './TaskForm.module.css';\nconst TaskForm = (props) => {\n  const taskInputRef = useRef();\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredValue = taskInputRef.current.value;\n\n    if (enteredValue.trim().length > 0) {\n      props.onEnterTask(enteredValue);\n    }\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitHandler}>\n      <input type='text' ref={taskInputRef} />\n      <button>{props.loading ? 'Sending...' : 'Add Task'}</button>\n    </form>\n  );\n};\n\nexport default TaskForm;\n","import { useState, useCallback } from 'react';\n\nconst useHttp = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendRequest = useCallback(async (requestConfig, applyData) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : 'GET',\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\n      });\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  }, []);\n\n  return {\n    isLoading,      // modern JS  same as isLoading: isLoading\n    error,\n    sendRequest,\n  };\n};\n\nexport default useHttp;","import Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport useHttp from '../../hooks/use-http';\n\nconst NewTask = (props) => {\n  const { isLoading, error, sendRequest: sendTaskRequest } = useHttp();\n\n  const createTask = (taskText, taskData) => {\n    const generatedId = taskData.name; // firebase-specific => \"name\" contains generated id\n    const createdTask = { id: generatedId, text: taskText };\n\n    props.onAddTask(createdTask);\n  };\n\n  const enterTaskHandler = async (taskText) => {\n    sendTaskRequest(\n      {\n        url: 'https://react-http-6b42f-default-rtdb.firebaseio.com/tasks.json',\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: { text: taskText },\n      },\n      createTask.bind(null, taskText)\n    );\n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n\n\n// import { useState } from 'react';\n\n// import Section from '../UI/Section';\n// import TaskForm from './TaskForm';\n\n// const NewTask = (props) => {\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(null);\n\n//   const enterTaskHandler = async (taskText) => {\n//     setIsLoading(true);\n//     setError(null);\n//     try {\n//       const response = await fetch(\n//         'https://react-http-6b42f-default-rtdb.firebaseio.com/tasks.json',\n//         {\n//           method: 'POST',\n//           body: JSON.stringify({ text: taskText }),\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//         }\n//       );\n\n//       if (!response.ok) {\n//         throw new Error('Request failed!');\n//       }\n\n//       const data = await response.json();\n\n//       const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n//       const createdTask = { id: generatedId, text: taskText };\n\n//       props.onAddTask(createdTask);\n//     } catch (err) {\n//       setError(err.message || 'Something went wrong!');\n//     }\n//     setIsLoading(false);\n//   };\n\n//   return (\n//     <Section>\n//       <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n//       {error && <p>{error}</p>}\n//     </Section>\n//   );\n// };\n\n// export default NewTask;\n","\nimport BackwardCounter from './components/BackwardCounter';\nimport ForwardCounter from './components/ForwardCounter';\nimport React, { useEffect, useState } from 'react';\n\nimport Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\nimport useHttp from './hooks/use-http';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n\n  const { isLoading, error, sendRequest: fetchTasks } = useHttp();\n\n  useEffect(() => {\n    const transformTasks = (tasksObj) => {\n      const loadedTasks = [];\n\n      for (const taskKey in tasksObj) {\n        loadedTasks.push({ id: taskKey, text: tasksObj[taskKey].text });\n      }\n\n      setTasks(loadedTasks);\n    };\n\n    fetchTasks(\n      { url: 'https://react-http-6b42f-default-rtdb.firebaseio.com/tasks.json' },\n      transformTasks\n    );\n  }, [fetchTasks]);\n\n  const taskAddHandler = (task) => {\n    setTasks((prevTasks) => prevTasks.concat(task));\n  };\n\n  return (\n    <React.Fragment>\n      <NewTask onAddTask={taskAddHandler} />\n      <Tasks\n        items={tasks}\n        loading={isLoading}\n        error={error}\n        onFetch={fetchTasks}\n      />\n       <ForwardCounter />\n      <BackwardCounter />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n\n\n\n// useEffect and dependency as function :\n// functions are objects in JavaScript.\n// And every time a function is recreate even if it contains the same logic, it's a brand new object in memory and therefore useEffect would treat it as a new value, \n// even if it's technically the same function and it would re execute it. So to avoid this, we should go to useHttp and wrap sendRequest with use callback which we can do also when we use a single weight in there","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}